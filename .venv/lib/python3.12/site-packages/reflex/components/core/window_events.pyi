"""Stub file for reflex/components/core/window_events.py"""

# ------------------- DO NOT EDIT ----------------------
# This file was generated by `reflex/utils/pyi_generator.py`!
# ------------------------------------------------------
from collections.abc import Mapping, Sequence
from typing import Any

from reflex.components.base.fragment import Fragment
from reflex.components.core.breakpoints import Breakpoints
from reflex.event import EventType, KeyInputInfo, PointerEventInfo
from reflex.vars.base import Var

class WindowEventListener(Fragment):
    def add_hooks(self) -> list[str | Var[str]]: ...
    @classmethod
    def create(
        cls,
        *children,
        style: Sequence[Mapping[str, Any]]
        | Mapping[str, Any]
        | Var[Mapping[str, Any]]
        | Breakpoints
        | None = None,
        key: Any | None = None,
        id: Any | None = None,
        ref: Var | None = None,
        class_name: Any | None = None,
        autofocus: bool | None = None,
        custom_attrs: dict[str, Var | Any] | None = None,
        on_before_unload: EventType[()] | None = None,
        on_blur: EventType[()] | None = None,
        on_click: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_context_menu: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_double_click: EventType[()] | EventType[PointerEventInfo] | None = None,
        on_focus: EventType[()] | None = None,
        on_key_down: EventType[()]
        | EventType[str]
        | EventType[str, KeyInputInfo]
        | None = None,
        on_mount: EventType[()] | None = None,
        on_mouse_down: EventType[()] | None = None,
        on_mouse_enter: EventType[()] | None = None,
        on_mouse_leave: EventType[()] | None = None,
        on_mouse_move: EventType[()] | None = None,
        on_mouse_out: EventType[()] | None = None,
        on_mouse_over: EventType[()] | None = None,
        on_mouse_up: EventType[()] | None = None,
        on_popstate: EventType[()] | None = None,
        on_resize: EventType[()] | EventType[int] | EventType[int, int] | None = None,
        on_scroll: EventType[()]
        | EventType[float]
        | EventType[float, float]
        | None = None,
        on_scroll_end: EventType[()] | None = None,
        on_storage: EventType[()]
        | EventType[str]
        | EventType[str, str]
        | EventType[str, str, str]
        | EventType[str, str, str, str]
        | None = None,
        on_unmount: EventType[()] | None = None,
        on_visibility_change: EventType[()] | EventType[bool] | None = None,
        **props,
    ) -> WindowEventListener:
        """Create the component.

        Args:
            *children: The children of the component.
            on_resize: Event handlers
            style: The style of the component.
            key: A unique key for the component.
            id: The id for the component.
            ref: The Var to pass as the ref to the component.
            class_name: The class name for the component.
            autofocus: Whether the component should take the focus once the page is loaded
            custom_attrs: custom attribute
            **props: The props of the component.

        Returns:
            The component.
        """

window_event_listener = WindowEventListener.create
